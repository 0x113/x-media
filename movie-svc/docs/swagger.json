{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Movie service API allows to get data from the third party API (TMDb at this moment) about the movie from the local drive.\nThe main purpose of the API is to update data, save it to the database and return it in the JSON format.",
        "title": "Movie service API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8002",
    "basePath": "/api/v1/movies",
    "paths": {
        "/get/all": {
            "get": {
                "description": "Retruns all movies from the database",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all movies",
                "operationId": "get-all-movies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.movieListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/update/all": {
            "post": {
                "description": "Calls the TMDb API to get data about movies from provided directories and saves it to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update all movies",
                "operationId": "update-all-movies",
                "parameters": [
                    {
                        "description": "the language in which to update the movie data",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateAllMoviesPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.updateAllMoviesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.movieListResponse": {
            "type": "object",
            "properties": {
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                }
            }
        },
        "handler.updateAllMoviesPayload": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string",
                    "example": "en"
                }
            }
        },
        "handler.updateAllMoviesResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.updateError"
                    }
                },
                "updated_movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.updatedMovie"
                    }
                }
            }
        },
        "handler.updateError": {
            "type": "object",
            "properties": {
                "/home/0x113/Movies/Heat.1995.mp4": {
                    "type": "string",
                    "example": "Unable to fund movie with such title"
                }
            }
        },
        "handler.updatedMovie": {
            "type": "object",
            "properties": {
                "/home/0x113/Movies/K-PAX.2001.mp4": {
                    "type": "string",
                    "example": "K-PAX"
                }
            }
        },
        "models.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "models.Movie": {
            "type": "object",
            "required": [
                "backdrop_path",
                "dir_path",
                "genres",
                "original_language",
                "original_title",
                "overview",
                "poster_path",
                "rating",
                "release_date",
                "title",
                "tmdb_id",
                "vote_count"
            ],
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                },
                "backdrop_path": {
                    "type": "string",
                    "example": "/rfEXNlql4CafRmtgp2VFQrBC4sh.jpg"
                },
                "dir_path": {
                    "type": "string",
                    "example": "/home/0x113/Movies/Heat.1995.mp4"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Action",
                        "Crime",
                        "Drama",
                        "Thriller"
                    ]
                },
                "imdb_id": {
                    "type": "string",
                    "example": "tt0113277"
                },
                "original_language": {
                    "type": "string",
                    "example": "en"
                },
                "original_title": {
                    "type": "string",
                    "example": "Heat"
                },
                "overview": {
                    "type": "string",
                    "example": "Obsessive master thief, Neil McCauley leads a top-notch crew on various daring heists throughout Los Angeles while determined detective, Vincent Hanna pursues him without rest. Each man recognizes and respects the ability and the dedication of the other even though they are aware their cat-and-mouse game may end in violence."
                },
                "poster_path": {
                    "type": "string",
                    "example": "/rrBuGu0Pjq7Y2BWSI6teGfZzviY.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 7.9
                },
                "release_date": {
                    "type": "string",
                    "example": "1995-12-15"
                },
                "runtime": {
                    "type": "integer",
                    "example": 170
                },
                "title": {
                    "type": "string",
                    "example": "Heat"
                },
                "tmdb_id": {
                    "type": "integer",
                    "example": 949
                },
                "vote_count": {
                    "type": "integer",
                    "example": 420
                }
            }
        }
    }
}